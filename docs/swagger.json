{
  "openapi": "3.1.0",
  "info": {
    "version": "1.0.0",
    "title": "Tasteorama app",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "description": "Tasteorama is a culinary API that allows users to create, edit, and view recipes. Supports registration, login, subscriptions, reviews, categories, regions, and content."
  },
  "servers": [
    {
      "url": "https://api.tasteorama.com/v1",
      "description": "Production server"
    },
    {
      "url": "http://localhost:3030",
      "description": "Local development"
    }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Registration and login"
    },
    {
      "name": "Recipes",
      "description": "Recipe operations"
    },
    {
      "name": "Users",
      "description": "Users and subscriptions"
    },
    {
      "name": "Ingredients",
      "description": "Ingredients"
    },
    {
      "name": "Categories",
      "description": "Recipe categories"
    },
    {
      "name": "Areas",
      "description": "Regions"
    },
    {
      "name": "Testimonials",
      "description": "User reviews"
    }
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "User registration",
        "operationId": "registerUser",
        "description": "**User Registration**\n\nCreates a new user account in the system.  \nThe user must provide their full name, a valid and unique email address, a secure password,  \nand confirm acceptance of the privacy policy.  \n\n### Notes\n- All fields are required.\n- Passwords should be at least 8 characters and include letters, numbers, and symbols.\n- A unique email is required for each account.\n- On success, an access token is returned for authenticated requests.\n",
        "security": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "email",
                  "password"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The user's name",
                    "example": "Gigi Hadid"
                  },
                  "email": {
                    "type": "string",
                    "description": "The user's email",
                    "example": "gigihadid@model.com"
                  },
                  "password": {
                    "type": "string",
                    "description": "The user's password",
                    "example": "BestModel111"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "User created successfully"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "accessToken"
                      ],
                      "properties": {
                        "accessToken": {
                          "type": "string",
                          "example": "bIHHDtBrjM3x61fcXQWrBiB0vvA/Fu0Z25YLbpAm"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "409": {
            "$ref": "#/components/responses/409"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "responses": {
      "409": {
        "description": "**Conflict Error (409)**\n\nThis error occurs when there is a conflict with the current state of the resource.\n- In this case, the conflict arises because the `email` provided is already in use by another account.\n",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "description": "HTTP status code indicating the error type.",
                  "example": 409
                },
                "message": {
                  "type": "string",
                  "description": "A brief summary of the conflict error.",
                  "example": "ConflictError"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message",
                    "errors"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Specific details about the error, such as the conflicting field.",
                      "example": "Email in use"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}