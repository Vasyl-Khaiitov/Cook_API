import { RecipesCollection } from '../db/models/recipes.js';
import { CategoriesCollection } from '../db/models/categories.js';
import { calculatePaginationData } from '../utils/calculatePaginationData.js';
import mongoose from 'mongoose';

export const getRecipesServices = async ({
  page,
  perPage,
  filter = {},
  userId,
}) => {
  const limit = perPage;
  const skip = (page - 1) * perPage;

  const query = userId ? { owner: userId } : {};

  // üîé –§—ñ–ª—å—Ç—Ä –ø–æ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó
  if (filter.category) {
    if (mongoose.Types.ObjectId.isValid(filter.category)) {
      // —è–∫—â–æ –ø–µ—Ä–µ–¥–∞–ª–∏ ObjectId
      query.category = filter.category;
    } else {
      // —è–∫—â–æ –ø–µ—Ä–µ–¥–∞–ª–∏ –Ω–∞–∑–≤—É –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥ "Breakfast")
      const categoryDoc = await CategoriesCollection.findOne({
        name: filter.category,
      });
      if (categoryDoc) {
        query.category = categoryDoc._id;
      } else {
        query.category = null; // –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ —Ç–∞–∫–æ—ó –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó ‚Üí –ø—É—Å—Ç–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
      }
    }
  }

  // üîé –§—ñ–ª—å—Ç—Ä –ø–æ —ñ–Ω–≥—Ä–µ–¥—ñ—î–Ω—Ç–∞—Ö
  if (filter.ingredients) {
    query['ingredients.id'] = { $all: filter.ingredients };
  }

  // üîé –§—ñ–ª—å—Ç—Ä –ø–æ –∑–∞–≥–æ–ª–æ–≤–∫—É
  if (filter.title) {
    query.title = new RegExp(filter.title, 'i');
  }

  const recipesCount = await RecipesCollection.countDocuments(query);

  const recipes = await RecipesCollection.find(query)
    .populate('category', 'name') // –ø—ñ–¥—Ç—è–≥–Ω–µ–º–æ –Ω–∞–∑–≤—É –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó
    .skip(skip)
    .limit(limit)
    .exec();

  const paginationData = calculatePaginationData(recipesCount, perPage, page);

  return {
    data: recipes,
    ...paginationData,
  };
};

export const getRecipeByIdServices = async (id) => {
  const recipeById = await RecipesCollection.findById(id)
    .populate('category', 'name') // —â–æ–± –ø—ñ–¥—Ç—è–≥–Ω—É—Ç–∏ –Ω–∞–∑–≤—É –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó
    .populate('ingredients.id', 'name'); // –º–æ–∂–Ω–∞ —Ç–∞–∫–æ–∂ –ø—ñ–¥—Ç—è–≥–Ω—É—Ç–∏ –Ω–∞–∑–≤–∏ —ñ–Ω–≥—Ä–µ–¥—ñ—î–Ω—Ç—ñ–≤
  return recipeById;
};
